{"mappings":"qhBAAA,IAAAA,EAAAC,EAAA,SAEA,MAAMC,EAASC,SAASC,cAAc,SACtCF,EAAOG,iBAAiB,UAExB,SAA+BC,GAC7BA,EAAIC,iBAEJ,MAAMC,EAAcF,EAAIG,OAAOC,SACzBC,EAAaC,OAAOJ,EAAYK,MAAMC,OACtCC,EAAYH,OAAOJ,EAAYQ,KAAKF,OACpCG,EAASL,OAAOJ,EAAYS,OAAOH,OAEzC,IAAK,IAAII,EAAI,EAAGA,GAAKD,EAAQC,GAAK,EAAG,CAGnCC,EAAcD,EAFKP,EAAaI,EAAYG,GAGzCE,MAAK,EAACC,SAAEA,EAAQR,MAAEA,MACjBS,EAAAtB,GAASuB,OAAOC,QAAQ,qBAAqBH,QAAeR,MAAU,IAEvEY,OAAM,EAACJ,SAAEA,EAAQR,MAAEA,MAClBS,EAAAtB,GAASuB,OAAOG,QAAQ,oBAAoBL,QAAeR,MAAU,IAGzEX,EAAOyB,O,CAGT,SAASR,EAAcE,EAAUR,GAC/B,OAAO,IAAIe,SAAQ,CAACC,EAASC,KAC3B,MAAMC,EAAgBC,KAAKC,SAAW,GACtCC,YAAW,KACLH,EACFF,EAAQ,C,SAAER,E,MAAUR,IAEpBiB,EAAO,C,SAAET,E,MAAUR,GAAQ,GAE5BA,EAAM,G","sources":["src/js/03-promises.js"],"sourcesContent":["import Notiflix from 'notiflix';\n\nconst formEl = document.querySelector('.form');\nformEl.addEventListener('submit', startPromiseGenerator);\n\nfunction startPromiseGenerator(evt) {\n  evt.preventDefault();\n\n  const formElement = evt.target.elements;\n  const startDelay = Number(formElement.delay.value);\n  const delayStep = Number(formElement.step.value);\n  const amount = Number(formElement.amount.value);\n  \n  for (let i = 1; i <= amount; i += 1) {\n    let promiseDelay = startDelay + delayStep * i;\n\n    createPromise(i, promiseDelay)\n      .then(({ position, delay }) => {\n        Notiflix.Notify.success(`Fulfilled promise ${position} in ${delay}ms`);\n      })\n      .catch(({ position, delay }) => {\n        Notiflix.Notify.failure(`Rejected promise ${position} in ${delay}ms`);\n      });\n\n    formEl.reset();\n  }\n\n  function createPromise(position, delay) {\n    return new Promise((resolve, reject) => {\n      const shouldResolve = Math.random() > 0.3;\n      setTimeout(() => {\n        if (shouldResolve) {\n          resolve({ position, delay });\n        } else {\n          reject({ position, delay });\n        }\n      }, delay);\n    });\n  }\n}\n"],"names":["$7Y9D8","parcelRequire","$47d4ff9957288465$var$formEl","document","querySelector","addEventListener","evt","preventDefault","formElement","target","elements","startDelay","Number","delay","value","delayStep","step","amount","i","createPromise","then","position","$parcel$interopDefault","Notify","success","catch","failure","reset","Promise","resolve","reject","shouldResolve","Math","random","setTimeout"],"version":3,"file":"03-promises.b82bedb0.js.map"}